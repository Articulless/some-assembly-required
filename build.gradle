buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.18.2-2.0.8'
group = 'some-assembly-required'
archivesBaseName = 'some-assembly-required'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.19.2'
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                some_assembly_required {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                some_assembly_required {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'some_assembly_required', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                some_assembly_required {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name 'tterrag maven'
        url 'https://maven.tterrag.com'
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.2'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    runtimeOnly fg.deobf("curse.maven:appleskin-248787:3872808")

    compileOnly fg.deobf("com.simibubi.create:create-1.19.2:0.5.0.d-5:slim") { transitive = false }
    compileOnly fg.deobf("com.jozufozu.flywheel:flywheel-forge-1.19.2:0.6.5-3")
    compileOnly fg.deobf("com.tterrag.registrate:Registrate:MC1.19-1.1.5")

    implementation fg.deobf("curse.maven:farmersdelight-398521:3916069")

    runtimeOnly fg.deobf("curse.maven:itemzoom-261725:3903160")

    // runtimeOnly fg.deobf("curse.maven:diet-443570:3758891")
}

mixin {
    // MixinGradle Settings
    add sourceSets.main, 'mixins.some_assembly_required.refmap.json'
    config 'mixins.some_assembly_required.json'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "some_assembly_required",
                "Specification-Vendor"    : "ochotonida",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "ochotonida",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
